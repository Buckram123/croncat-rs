{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0","program":"/Users/deveus/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","peg","--edition=2018","/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=42b5bec1cadbbc2e","-C","extra-filename=-42b5bec1cadbbc2e","--out-dir","/Volumes/Data/Cosmos/croncat-rs/target/rls/debug/deps","-L","dependency=/Volumes/Data/Cosmos/croncat-rs/target/rls/debug/deps","--extern","peg_macros=/Volumes/Data/Cosmos/croncat-rs/target/rls/debug/deps/libpeg_macros-1029070352be94cf.dylib","--extern","peg_runtime=/Volumes/Data/Cosmos/croncat-rs/target/rls/debug/deps/libpeg_runtime-e8e89fef14011e1b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/deveus/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Volumes/Data/Cosmos/croncat-rs/target/rls/debug/deps/libpeg-42b5bec1cadbbc2e.rmeta"},"prelude":{"crate_id":{"name":"peg","disambiguator":[10555142856166865838,0]},"crate_root":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src","external_crates":[{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10021291131669744914,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10014640881818692046,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15800718316297612287,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6961639640463363723,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15443605689848621,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16699447446517724675,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7072391781806093942,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4396878825326251599,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8751207805142453879,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1923978614408483767,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14411112285710781992,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2356975140922920692,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17423446140748502282,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[9260941638389817344,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7858856860374224051,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4855109919914642709,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15652019722635755907,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[5018606611167862631,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[532173890138877460,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":20,"id":{"name":"peg_macros","disambiguator":[13229133176132826441,0]}},{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","num":21,"id":{"name":"peg_runtime","disambiguator":[10727981940384519890,0]}}],"span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":0,"byte_end":13858,"line_start":1,"line_end":316,"column_start":1,"column_end":20}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":389},"span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13831,"byte_end":13837,"line_start":315,"line_end":315,"column_start":21,"column_end":27},"alias_span":null,"name":"parser","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13856,"byte_end":13857,"line_start":316,"line_end":316,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":0,"byte_end":13858,"line_start":1,"line_end":316,"column_start":1,"column_end":20},"name":"","qualname":"::","value":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8}],"decl_id":null,"docs":" `rust-peg` is a simple yet flexible parser generator that makes it easy to\n write robust parsers. Based on the [Parsing Expression\n Grammar][wikipedia-peg] formalism, it provides a Rust macro that builds a\n recursive descent parser from a concise definition of the grammar.","sig":null,"attributes":[{"value":"/ `rust-peg` is a simple yet flexible parser generator that makes it easy to","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ write robust parsers. Based on the [Parsing Expression","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":79,"byte_end":137,"line_start":2,"line_end":2,"column_start":1,"column_end":59}},{"value":"/ Grammar][wikipedia-peg] formalism, it provides a Rust macro that builds a","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":138,"byte_end":215,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ recursive descent parser from a concise definition of the grammar.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":216,"byte_end":286,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":287,"byte_end":290,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [wikipedia-peg]: https://en.wikipedia.org/wiki/Parsing_expression_grammar","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":291,"byte_end":368,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":369,"byte_end":372,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":373,"byte_end":388,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":389,"byte_end":392,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * Parse input from `&str`, `&[u8]`, `&[T]` or custom types implementing","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":393,"byte_end":468,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/   traits","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":469,"byte_end":481,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/ * Customizable reporting of parse errors","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":482,"byte_end":526,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/ * Rules can accept arguments to create reusable rule templates","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":527,"byte_end":593,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ * Precedence climbing for prefix/postfix/infix expressions","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":594,"byte_end":656,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ * Helpful `rustc` error messages for errors in the grammar definition or the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":657,"byte_end":737,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/   Rust code embedded within it","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":738,"byte_end":772,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ * Rule-level tracing to debug grammars","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":773,"byte_end":815,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":816,"byte_end":819,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Overview","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":820,"byte_end":835,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":836,"byte_end":839,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The `peg::parser!{}` macro encloses a `grammar NAME() for INPUT_TYPE { ...","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":840,"byte_end":918,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ }` definition containing a set of rules which match components of your","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":919,"byte_end":993,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ language.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":994,"byte_end":1007,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1008,"byte_end":1011,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Rules are defined with `rule NAME(PARAMETERS) -> RETURN_TYPE = PEG_EXPR`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1012,"byte_end":1089,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ The body of the rule, following the `=`, is a PEG expression, definining how","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1090,"byte_end":1170,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ the input is matched to produce a value.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1171,"byte_end":1215,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1216,"byte_end":1219,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ PEG expressions are evaluated at a particular position of the input. When an","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1220,"byte_end":1300,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ expression matches, it advances the position and optionally returns a value.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1301,"byte_end":1381,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ The expression syntax and behavior is [documented","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1382,"byte_end":1435,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ below](#expression-reference).","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1436,"byte_end":1470,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1471,"byte_end":1474,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The macro expands to a Rust `mod` containing a function for each rule marked","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1475,"byte_end":1555,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ `pub` in the grammar. To parse an input sequence, call one of these","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1556,"byte_end":1627,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ functions. The call returns a `Result<T, ParseError>` carrying either the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1628,"byte_end":1705,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ successfully parsed value returned by the rule, or a `ParseError` containing","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1706,"byte_end":1786,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ the failure position and the set of tokens expected there.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1787,"byte_end":1849,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1850,"byte_end":1853,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1854,"byte_end":1868,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1869,"byte_end":1872,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Parse a comma-separated list of numbers surrounded by brackets into a `Vec<u32>`:","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1873,"byte_end":1958,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1959,"byte_end":1962,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1963,"byte_end":1974,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ peg::parser!{","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1975,"byte_end":1992,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/   grammar list_parser() for str {","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":1993,"byte_end":2030,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     rule number() -> u32","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2031,"byte_end":2059,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/       = n:$(['0'..='9']+) {? n.parse().or(Err(\"u32\")) }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2060,"byte_end":2119,"line_start":48,"line_end":48,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2120,"byte_end":2123,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     pub rule list() -> Vec<u32>","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2124,"byte_end":2159,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/       = \"[\" l:number() ** \",\" \"]\" { l }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2160,"byte_end":2203,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"/   }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2204,"byte_end":2211,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2212,"byte_end":2217,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2218,"byte_end":2221,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ pub fn main() {","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2222,"byte_end":2241,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/     assert_eq!(list_parser::list(\"[1,1,2,3,5,8]\"), Ok(vec![1, 1, 2, 3, 5, 8]));","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2242,"byte_end":2325,"line_start":56,"line_end":56,"column_start":1,"column_end":84}},{"value":"/ }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2326,"byte_end":2331,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2332,"byte_end":2339,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2340,"byte_end":2343,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ## Expression Reference","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2344,"byte_end":2371,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2372,"byte_end":2375,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ### Atoms","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2376,"byte_end":2389,"line_start":62,"line_end":62,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2390,"byte_end":2393,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/   * `\"keyword\"` - _Literal:_ match a literal string.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2394,"byte_end":2450,"line_start":64,"line_end":64,"column_start":1,"column_end":57}},{"value":"/   * `['0'..='9']`  - _Pattern:_ match a single element that matches a Rust `match`-style","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2451,"byte_end":2543,"line_start":65,"line_end":65,"column_start":1,"column_end":93}},{"value":"/     pattern. [(details)](#pattern-expressions)","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2544,"byte_end":2594,"line_start":66,"line_end":66,"column_start":1,"column_end":51}},{"value":"/   * `[^ '0'..='9']`  - _Inverted pattern:_ match a single element that does not match a Rust `match`-style","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2595,"byte_end":2705,"line_start":67,"line_end":67,"column_start":1,"column_end":111}},{"value":"/     pattern. [(details)](#pattern-expressions)","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2706,"byte_end":2756,"line_start":68,"line_end":68,"column_start":1,"column_end":51}},{"value":"/   * `some_rule()` - _Rule:_ match a rule defined elsewhere in the grammar and return its","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2757,"byte_end":2849,"line_start":69,"line_end":69,"column_start":1,"column_end":93}},{"value":"/     result. Arguments in the parentheses are Rust expressions.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2850,"byte_end":2916,"line_start":70,"line_end":70,"column_start":1,"column_end":67}},{"value":"/   * `_` or `__` or `___` - _Rule (underscore):_ As a special case, rule names","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2917,"byte_end":2998,"line_start":71,"line_end":71,"column_start":1,"column_end":82}},{"value":"/     consisting of underscores can be defined and invoked without parentheses. These are","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":2999,"byte_end":3090,"line_start":72,"line_end":72,"column_start":1,"column_end":92}},{"value":"/     conventionally used to match whitespace between tokens.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3091,"byte_end":3154,"line_start":73,"line_end":73,"column_start":1,"column_end":64}},{"value":"/   * `(e)` - _Parentheses:_ wrap an expression into a group to override","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3155,"byte_end":3229,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/     normal precedence. Returns the same value as the inner expression. (Use","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3230,"byte_end":3309,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/     an _Action_ block to set the return value for a sequence).","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3310,"byte_end":3376,"line_start":76,"line_end":76,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3377,"byte_end":3380,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Combining","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3381,"byte_end":3398,"line_start":78,"line_end":78,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3399,"byte_end":3402,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/   * `e1 e2 e3` - _Sequence:_ match expressions in sequence (`e1` followed by `e2` followed by","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3403,"byte_end":3500,"line_start":80,"line_end":80,"column_start":1,"column_end":98}},{"value":"/     `e3`), ignoring the return values.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3501,"byte_end":3543,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/   * `a:e1 e2 b:e3 c:e4 { rust }` - _Action:_ match `e1`, `e2`, `e3`, `e4` in","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3544,"byte_end":3624,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"/     sequence, like above. If they match successfully, run the Rust code in","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3625,"byte_end":3703,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/     the block and return its return value. The variable names before the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3704,"byte_end":3780,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/     colons in the sequence are bound to the results of the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3781,"byte_end":3843,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/     corresponding expressions. It is important that the Rust code embedded","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3844,"byte_end":3922,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/     in the grammar is deterministic and free of side effects, as it may be","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":3923,"byte_end":4001,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/     called multiple times.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4002,"byte_end":4032,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/   * `a:e1 b:e2 c:e3 {? rust }` - _Conditional action:_ Like above, but the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4033,"byte_end":4111,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/     Rust block returns a `Result<T, &str>` instead of a value directly. On","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4112,"byte_end":4190,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/     `Ok(v)`, it matches successfully and returns `v`. On `Err(e)`, the match","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4191,"byte_end":4271,"line_start":91,"line_end":91,"column_start":1,"column_end":81}},{"value":"/     of the entire expression fails and it tries alternatives or reports a","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4272,"byte_end":4349,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"/     parse error with the `&str` `e`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4350,"byte_end":4390,"line_start":93,"line_end":93,"column_start":1,"column_end":41}},{"value":"/   * `e1 / e2 / e3` - _Ordered choice:_ try to match `e1`. If the match succeeds, return its","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4391,"byte_end":4486,"line_start":94,"line_end":94,"column_start":1,"column_end":96}},{"value":"/     result, otherwise try `e2`, and so on.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4487,"byte_end":4533,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4534,"byte_end":4537,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ### Repetition","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4538,"byte_end":4556,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/   * `expression?` - _Optional:_ match zero or one repetitions of `expression`. Returns an","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4557,"byte_end":4650,"line_start":98,"line_end":98,"column_start":1,"column_end":94}},{"value":"/     `Option`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4651,"byte_end":4668,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/   * `expression*` - _Repeat:_ match zero or more repetitions of `expression` and return the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4669,"byte_end":4764,"line_start":100,"line_end":100,"column_start":1,"column_end":96}},{"value":"/     results as a `Vec`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4765,"byte_end":4792,"line_start":101,"line_end":101,"column_start":1,"column_end":28}},{"value":"/   * `expression+` - _One-or-more:_ match one or more repetitions of `expression` and return the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4793,"byte_end":4892,"line_start":102,"line_end":102,"column_start":1,"column_end":100}},{"value":"/     results as a `Vec`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4893,"byte_end":4920,"line_start":103,"line_end":103,"column_start":1,"column_end":28}},{"value":"/   * `expression*<n,m>` - _Range repeat:_ match between `n` and `m` repetitions of `expression`","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":4921,"byte_end":5019,"line_start":104,"line_end":104,"column_start":1,"column_end":99}},{"value":"/     return the results as a `Vec`. [(details)](#repeat-ranges)","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5020,"byte_end":5086,"line_start":105,"line_end":105,"column_start":1,"column_end":67}},{"value":"/   * `expression ** delim` - _Delimited repeat:_ match zero or more repetitions of `expression`","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5087,"byte_end":5185,"line_start":106,"line_end":106,"column_start":1,"column_end":99}},{"value":"/     delimited with `delim` and return the results as a `Vec`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5186,"byte_end":5251,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/   * `expression **<n,m> delim` - _Delimited repeat (range):_ match between `n` and `m` repetitions of `expression`","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5252,"byte_end":5370,"line_start":108,"line_end":108,"column_start":1,"column_end":119}},{"value":"/     delimited with `delim` and return the results as a `Vec`. [(details)](#repeat-ranges)","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5371,"byte_end":5464,"line_start":109,"line_end":109,"column_start":1,"column_end":94}},{"value":"/   * `expression ++ delim` - _Delimited repeat (one or more):_ match one or more repetitions of `expression`","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5465,"byte_end":5576,"line_start":110,"line_end":110,"column_start":1,"column_end":112}},{"value":"/     delimited with `delim` and return the results as a `Vec`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5577,"byte_end":5642,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5643,"byte_end":5646,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/  ### Special","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5647,"byte_end":5663,"line_start":113,"line_end":113,"column_start":1,"column_end":17}},{"value":"/   * `$(e)` - _Slice:_ match the expression `e`, and return the slice of the input","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5664,"byte_end":5749,"line_start":114,"line_end":114,"column_start":1,"column_end":86}},{"value":"/     corresponding to the match.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5750,"byte_end":5785,"line_start":115,"line_end":115,"column_start":1,"column_end":36}},{"value":"/   * `&e` - _Positive lookahead:_ Match only if `e` matches at this position,","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5786,"byte_end":5866,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/     without consuming any characters.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5867,"byte_end":5908,"line_start":117,"line_end":117,"column_start":1,"column_end":42}},{"value":"/   * `!e` - _Negative lookahead:_ Match only if `e` does not match at this","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5909,"byte_end":5986,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/     position, without consuming any characters.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":5987,"byte_end":6038,"line_start":119,"line_end":119,"column_start":1,"column_end":52}},{"value":"/   * `position!()` - return a `usize` representing the current offset into","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6039,"byte_end":6116,"line_start":120,"line_end":120,"column_start":1,"column_end":78}},{"value":"/     the input without consuming anything.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6117,"byte_end":6162,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/   * `quiet!{ e }` - match the expression `e`, but don't report literals within it as \"expected\" in","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6163,"byte_end":6265,"line_start":122,"line_end":122,"column_start":1,"column_end":103}},{"value":"/     error messages.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6266,"byte_end":6289,"line_start":123,"line_end":123,"column_start":1,"column_end":24}},{"value":"/   * `expected!(\"something\")` - fail to match, and report the specified string as expected","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6290,"byte_end":6383,"line_start":124,"line_end":124,"column_start":1,"column_end":94}},{"value":"/     at the current location.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6384,"byte_end":6416,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/   * `precedence!{ ... }` - Parse infix, prefix, or postfix expressions by precedence climbing.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6417,"byte_end":6515,"line_start":126,"line_end":126,"column_start":1,"column_end":99}},{"value":"/     [(details)](#precedence-climbing)","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6516,"byte_end":6557,"line_start":127,"line_end":127,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6558,"byte_end":6561,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Expression details","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6562,"byte_end":6587,"line_start":129,"line_end":129,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6588,"byte_end":6591,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ### Pattern expressions","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6592,"byte_end":6619,"line_start":131,"line_end":131,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6620,"byte_end":6623,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The `[pat]` syntax expands into a [Rust `match`","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6624,"byte_end":6675,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/ pattern](https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html) against the next character","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6676,"byte_end":6775,"line_start":134,"line_end":134,"column_start":1,"column_end":100}},{"value":"/ (or element) of the input. When the pattern begins with `^`, the matching behavior is inverted:","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6776,"byte_end":6875,"line_start":135,"line_end":135,"column_start":1,"column_end":100}},{"value":"/ the expression succeeds only if the pattern does *not* match.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6876,"byte_end":6941,"line_start":136,"line_end":136,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6942,"byte_end":6945,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ To match sets of characters, use Rust's `..=` inclusive range pattern","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":6946,"byte_end":7019,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ syntax and `|` to match multiple patterns. For example `['a'..='z' | 'A'..='Z']` matches an","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7020,"byte_end":7115,"line_start":139,"line_end":139,"column_start":1,"column_end":96}},{"value":"/ upper or lower case ASCII alphabet character.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7116,"byte_end":7165,"line_start":140,"line_end":140,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7166,"byte_end":7169,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ If your input type is a slice of an enum type, a pattern could match an enum variant like","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7170,"byte_end":7263,"line_start":142,"line_end":142,"column_start":1,"column_end":94}},{"value":"/ `[Token::Operator('+')]`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7264,"byte_end":7293,"line_start":143,"line_end":143,"column_start":1,"column_end":30}},{"value":"/ ","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7294,"byte_end":7298,"line_start":144,"line_end":144,"column_start":1,"column_end":5}},{"value":"/ Variables captured by the pattern are accessible in a subsequent action","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7299,"byte_end":7374,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ block: `[Token::Integer(i)] { i }`","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7375,"byte_end":7413,"line_start":146,"line_end":146,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7414,"byte_end":7417,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ `[_]` matches any single element. As this always matches except at end-of-file, combining it","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7418,"byte_end":7514,"line_start":148,"line_end":148,"column_start":1,"column_end":97}},{"value":"/ with negative lookahead as `![_]` is the idiom for matching EOF in PEG.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7515,"byte_end":7590,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7591,"byte_end":7594,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ### Repeat ranges","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7595,"byte_end":7616,"line_start":151,"line_end":151,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7617,"byte_end":7620,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The repeat operators `*` and `**` can be followed by an optional range specification of the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7621,"byte_end":7716,"line_start":153,"line_end":153,"column_start":1,"column_end":96}},{"value":"/ form `<n>` (exact), `<n,>` (min), `<,m>` (max) or `<n,m>` (range), where `n` and `m` are either","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7717,"byte_end":7816,"line_start":154,"line_end":154,"column_start":1,"column_end":100}},{"value":"/ integers, or a Rust `usize` expression enclosed in `{}`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7817,"byte_end":7877,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7878,"byte_end":7881,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ### Precedence climbing","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7882,"byte_end":7909,"line_start":157,"line_end":157,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7910,"byte_end":7913,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ `precedence!{ rules... }` provides a convenient way to parse infix, prefix, and postfix","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":7914,"byte_end":8005,"line_start":159,"line_end":159,"column_start":1,"column_end":92}},{"value":"/ operators using the [precedence","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8006,"byte_end":8041,"line_start":160,"line_end":160,"column_start":1,"column_end":36}},{"value":"/ climbing](http://eli.thegreenplace.net/2012/08/02/parsing-expressions-by-precedence-climbing)","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8042,"byte_end":8139,"line_start":161,"line_end":161,"column_start":1,"column_end":98}},{"value":"/ algorithm.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8140,"byte_end":8154,"line_start":162,"line_end":162,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8155,"byte_end":8158,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8159,"byte_end":8177,"line_start":164,"line_end":164,"column_start":1,"column_end":19}},{"value":"/ # peg::parser!{grammar doc() for str {","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8178,"byte_end":8220,"line_start":165,"line_end":165,"column_start":1,"column_end":43}},{"value":"/ # pub rule number() -> i64 = \"...\" { 0 }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8221,"byte_end":8265,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"/ pub rule arithmetic() -> i64 = precedence!{","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8266,"byte_end":8313,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/   x:(@) \"+\" y:@ { x + y }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8314,"byte_end":8343,"line_start":168,"line_end":168,"column_start":1,"column_end":30}},{"value":"/   x:(@) \"-\" y:@ { x - y }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8344,"byte_end":8373,"line_start":169,"line_end":169,"column_start":1,"column_end":30}},{"value":"/   --","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8374,"byte_end":8382,"line_start":170,"line_end":170,"column_start":1,"column_end":9}},{"value":"/   x:(@) \"*\" y:@ { x * y }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8383,"byte_end":8412,"line_start":171,"line_end":171,"column_start":1,"column_end":30}},{"value":"/   x:(@) \"/\" y:@ { x / y }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8413,"byte_end":8442,"line_start":172,"line_end":172,"column_start":1,"column_end":30}},{"value":"/   --","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8443,"byte_end":8451,"line_start":173,"line_end":173,"column_start":1,"column_end":9}},{"value":"/   x:@ \"^\" y:(@) { x.pow(y as u32) }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8452,"byte_end":8491,"line_start":174,"line_end":174,"column_start":1,"column_end":40}},{"value":"/   --","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8492,"byte_end":8500,"line_start":175,"line_end":175,"column_start":1,"column_end":9}},{"value":"/   n:number() { n }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8501,"byte_end":8523,"line_start":176,"line_end":176,"column_start":1,"column_end":23}},{"value":"/   \"(\" e:arithmetic() \")\" { e }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8524,"byte_end":8558,"line_start":177,"line_end":177,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8559,"byte_end":8564,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8565,"byte_end":8573,"line_start":179,"line_end":179,"column_start":1,"column_end":9}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8574,"byte_end":8592,"line_start":180,"line_end":180,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8593,"byte_end":8600,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8601,"byte_end":8604,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Each `--` introduces a new precedence level that binds more tightly than previous precedence","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8605,"byte_end":8701,"line_start":183,"line_end":183,"column_start":1,"column_end":97}},{"value":"/ levels. The levels consist of one or more operator rules each followed by a Rust action","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8702,"byte_end":8793,"line_start":184,"line_end":184,"column_start":1,"column_end":92}},{"value":"/ expression.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8794,"byte_end":8809,"line_start":185,"line_end":185,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8810,"byte_end":8813,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ The `(@)` and `@` are the operands, and the parentheses indicate associativity. An operator","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8814,"byte_end":8909,"line_start":187,"line_end":187,"column_start":1,"column_end":96}},{"value":"/ rule beginning and ending with `@` is an infix expression. Prefix and postfix rules have one","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":8910,"byte_end":9006,"line_start":188,"line_end":188,"column_start":1,"column_end":97}},{"value":"/ `@` at the beginning or end, and atoms do not include `@`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9007,"byte_end":9069,"line_start":189,"line_end":189,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9070,"byte_end":9073,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ### End-of-file handling","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9074,"byte_end":9102,"line_start":191,"line_end":191,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9103,"byte_end":9106,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Normally, parsers report an error if the top-level rule matches without consuming all the input.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9107,"byte_end":9207,"line_start":193,"line_end":193,"column_start":1,"column_end":101}},{"value":"/ To allow matching a prefix of the input, add the `#[no_eof]` attribute before `pub rule`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9208,"byte_end":9301,"line_start":194,"line_end":194,"column_start":1,"column_end":94}},{"value":"/ Take care to not miss a malformed `x` at the last position if the rule ends with a `x()*`","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9302,"byte_end":9395,"line_start":195,"line_end":195,"column_start":1,"column_end":94}},{"value":"/ repeat expression.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9396,"byte_end":9418,"line_start":196,"line_end":196,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9419,"byte_end":9422,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ## Input types","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9423,"byte_end":9441,"line_start":198,"line_end":198,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9442,"byte_end":9445,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/  The first line of the grammar declares an input type. This is normally","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9446,"byte_end":9521,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/  `str`, but  `rust-peg` handles input types through a series of traits. The","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9522,"byte_end":9601,"line_start":201,"line_end":201,"column_start":1,"column_end":80}},{"value":"/  library comes with implementations for `str`, `[u8]`, and `[T]`. Define the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9602,"byte_end":9682,"line_start":202,"line_end":202,"column_start":1,"column_end":81}},{"value":"/  traits below to use your own types as input to `peg` grammars:","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9683,"byte_end":9750,"line_start":203,"line_end":203,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9751,"byte_end":9754,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/   * [`Parse`] is the base trait required for all inputs. The others are only required to use the","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9755,"byte_end":9855,"line_start":205,"line_end":205,"column_start":1,"column_end":101}},{"value":"/     corresponding expressions.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9856,"byte_end":9890,"line_start":206,"line_end":206,"column_start":1,"column_end":35}},{"value":"/   * [`ParseElem`] implements the `[_]` pattern operator, with a method returning the next item of","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9891,"byte_end":9992,"line_start":207,"line_end":207,"column_start":1,"column_end":102}},{"value":"/     the input to match.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":9993,"byte_end":10020,"line_start":208,"line_end":208,"column_start":1,"column_end":28}},{"value":"/   * [`ParseLiteral`] implements matching against a `\"string\"` literal.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10021,"byte_end":10095,"line_start":209,"line_end":209,"column_start":1,"column_end":75}},{"value":"/   * [`ParseSlice`] implements the `$()` operator, returning a slice from a span of indexes.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10096,"byte_end":10191,"line_start":210,"line_end":210,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10192,"byte_end":10195,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ As a more complex example, the body of the `peg::parser!{}` macro itself is","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10196,"byte_end":10275,"line_start":212,"line_end":212,"column_start":1,"column_end":80}},{"value":"/ parsed with `peg`, using a [definition of these traits][gh-flat-token-tree]","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10276,"byte_end":10355,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/ for a type that wraps Rust's `TokenTree`.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10356,"byte_end":10401,"line_start":214,"line_end":214,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10402,"byte_end":10405,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [gh-flat-token-tree]: https://github.com/kevinmehall/rust-peg/blob/master/peg-macros/tokens.rs","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10406,"byte_end":10504,"line_start":216,"line_end":216,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10505,"byte_end":10508,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Error reporting","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10509,"byte_end":10531,"line_start":218,"line_end":218,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10532,"byte_end":10535,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ When a match fails, position information is automatically recorded to report a set of","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10536,"byte_end":10625,"line_start":220,"line_end":220,"column_start":1,"column_end":90}},{"value":"/ \"expected\" tokens that would have allowed the parser to advance further.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10626,"byte_end":10702,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10703,"byte_end":10706,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ Some rules should never appear in error messages, and can be suppressed with `quiet!{e}`:","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10707,"byte_end":10800,"line_start":223,"line_end":223,"column_start":1,"column_end":94}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10801,"byte_end":10819,"line_start":224,"line_end":224,"column_start":1,"column_end":19}},{"value":"/ # peg::parser!{grammar doc() for str {","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10820,"byte_end":10862,"line_start":225,"line_end":225,"column_start":1,"column_end":43}},{"value":"/ rule whitespace() = quiet!{[' ' | '\\n' | '\\t']+}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10863,"byte_end":10915,"line_start":226,"line_end":226,"column_start":1,"column_end":53}},{"value":"/ # }}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10916,"byte_end":10924,"line_start":227,"line_end":227,"column_start":1,"column_end":9}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10925,"byte_end":10943,"line_start":228,"line_end":228,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10944,"byte_end":10951,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10952,"byte_end":10955,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ If you want the \"expected\" set to contain a more helpful string instead of character sets, you","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":10956,"byte_end":11054,"line_start":231,"line_end":231,"column_start":1,"column_end":99}},{"value":"/ can use `quiet!{}` and `expected!()` together:","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11055,"byte_end":11105,"line_start":232,"line_end":232,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11106,"byte_end":11109,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11110,"byte_end":11128,"line_start":234,"line_end":234,"column_start":1,"column_end":19}},{"value":"/ # peg::parser!{grammar doc() for str {","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11129,"byte_end":11171,"line_start":235,"line_end":235,"column_start":1,"column_end":43}},{"value":"/ rule identifier()","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11172,"byte_end":11193,"line_start":236,"line_end":236,"column_start":1,"column_end":22}},{"value":"/   = quiet!{[ 'a'..='z' | 'A'..='Z']['a'..='z' | 'A'..='Z' | '0'..='9' ]+}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11194,"byte_end":11271,"line_start":237,"line_end":237,"column_start":1,"column_end":78}},{"value":"/   / expected!(\"identifier\")","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11272,"byte_end":11303,"line_start":238,"line_end":238,"column_start":1,"column_end":32}},{"value":"/ # }}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11304,"byte_end":11312,"line_start":239,"line_end":239,"column_start":1,"column_end":9}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11313,"byte_end":11331,"line_start":240,"line_end":240,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11332,"byte_end":11339,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11340,"byte_end":11343,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ## Imports","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11344,"byte_end":11358,"line_start":243,"line_end":243,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11359,"byte_end":11362,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11363,"byte_end":11381,"line_start":245,"line_end":245,"column_start":1,"column_end":19}},{"value":"/ mod ast {","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11382,"byte_end":11395,"line_start":246,"line_end":246,"column_start":1,"column_end":14}},{"value":"/    pub struct Expr;","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11396,"byte_end":11419,"line_start":247,"line_end":247,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11420,"byte_end":11425,"line_start":248,"line_end":248,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11426,"byte_end":11429,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ peg::parser!{grammar doc() for str {","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11430,"byte_end":11470,"line_start":250,"line_end":250,"column_start":1,"column_end":41}},{"value":"/     use self::ast::Expr;","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11471,"byte_end":11499,"line_start":251,"line_end":251,"column_start":1,"column_end":29}},{"value":"/ }}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11500,"byte_end":11506,"line_start":252,"line_end":252,"column_start":1,"column_end":7}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11507,"byte_end":11525,"line_start":253,"line_end":253,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11526,"byte_end":11533,"line_start":254,"line_end":254,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11534,"byte_end":11537,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ The grammar may begin with a series of `use` declarations, just like in Rust, which are","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11538,"byte_end":11629,"line_start":256,"line_end":256,"column_start":1,"column_end":92}},{"value":"/ included in the generated module. Unlike normal `mod {}` blocks, `use super::*` is inserted by","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11630,"byte_end":11728,"line_start":257,"line_end":257,"column_start":1,"column_end":99}},{"value":"/ default, so you don't have to deal with this most of the time.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11729,"byte_end":11795,"line_start":258,"line_end":258,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11796,"byte_end":11799,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ## Rustdoc comments","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11800,"byte_end":11823,"line_start":260,"line_end":260,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11824,"byte_end":11827,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ `rustdoc` comments with `///` before a `grammar` or `pub rule` are propagated to the resulting","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11828,"byte_end":11926,"line_start":262,"line_end":262,"column_start":1,"column_end":99}},{"value":"/ module or function:","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11927,"byte_end":11950,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11951,"byte_end":11954,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11955,"byte_end":11973,"line_start":265,"line_end":265,"column_start":1,"column_end":19}},{"value":"/ # peg::parser!{grammar doc() for str {","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":11974,"byte_end":12016,"line_start":266,"line_end":266,"column_start":1,"column_end":43}},{"value":"/ /// Parse an array expression.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12017,"byte_end":12051,"line_start":267,"line_end":267,"column_start":1,"column_end":35}},{"value":"/ pub rule array() -> Vec<i32> = \"[...]\" { vec![] }","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12052,"byte_end":12105,"line_start":268,"line_end":268,"column_start":1,"column_end":54}},{"value":"/ # }}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12106,"byte_end":12114,"line_start":269,"line_end":269,"column_start":1,"column_end":9}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12115,"byte_end":12133,"line_start":270,"line_end":270,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12134,"byte_end":12141,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12142,"byte_end":12145,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ As with all procedural macros, non-doc comments are ignored by the lexer and can be used like","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12146,"byte_end":12243,"line_start":273,"line_end":273,"column_start":1,"column_end":98}},{"value":"/ in any other Rust code.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12244,"byte_end":12271,"line_start":274,"line_end":274,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12272,"byte_end":12275,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ## Caching","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12276,"byte_end":12290,"line_start":276,"line_end":276,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12291,"byte_end":12294,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ A `rule` without parameters can be prefixed with `#[cache]` if it is likely","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12295,"byte_end":12374,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ to be checked repeatedly in the same position. This memoizes the rule result","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12375,"byte_end":12455,"line_start":279,"line_end":279,"column_start":1,"column_end":81}},{"value":"/ as a function of input position, in the style of a [packrat","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12456,"byte_end":12519,"line_start":280,"line_end":280,"column_start":1,"column_end":64}},{"value":"/ parser][wp-peg-packrat].","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12520,"byte_end":12548,"line_start":281,"line_end":281,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12549,"byte_end":12552,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ [wp-peg-packrat]: https://en.wikipedia.org/wiki/Parsing_expression_grammar#Implementing_parsers_from_parsing_expression_grammars","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12553,"byte_end":12685,"line_start":283,"line_end":283,"column_start":1,"column_end":133}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12686,"byte_end":12689,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ However, idiomatic code avoids structures that parse the same input","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12690,"byte_end":12761,"line_start":285,"line_end":285,"column_start":1,"column_end":72}},{"value":"/ repeatedly, so the use of `#[cache]` is often not a performance win. Simple","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12762,"byte_end":12841,"line_start":286,"line_end":286,"column_start":1,"column_end":80}},{"value":"/ rules may also be faster to re-match than the additional cost of the hash","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12842,"byte_end":12919,"line_start":287,"line_end":287,"column_start":1,"column_end":78}},{"value":"/ table lookup and insert.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12920,"byte_end":12948,"line_start":288,"line_end":288,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12949,"byte_end":12952,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ For example, a complex rule called `expr` might benefit from caching if used","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":12953,"byte_end":13033,"line_start":290,"line_end":290,"column_start":1,"column_end":81}},{"value":"/ like `expr \"x\" / expr \"y\" / expr \"z\"`, but this could be rewritten to","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13034,"byte_end":13107,"line_start":291,"line_end":291,"column_start":1,"column_end":74}},{"value":"/ `expr (\"x\" / \"y\" / \"z\")` which would be even faster.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13108,"byte_end":13164,"line_start":292,"line_end":292,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13165,"byte_end":13168,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ The `precedence!{}` syntax is another way to avoid repeatedly matching","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13169,"byte_end":13243,"line_start":294,"line_end":294,"column_start":1,"column_end":75}},{"value":"/ an expression rule.","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13244,"byte_end":13267,"line_start":295,"line_end":295,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13268,"byte_end":13271,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ ## Tracing","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13272,"byte_end":13286,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13287,"byte_end":13290,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ If you pass the `peg/trace` feature to Cargo when building your project, a","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13291,"byte_end":13369,"line_start":299,"line_end":299,"column_start":1,"column_end":79}},{"value":"/ trace of the rules attempted and matched will be printed to stdout when","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13370,"byte_end":13445,"line_start":300,"line_end":300,"column_start":1,"column_end":76}},{"value":"/ parsing. For example,","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13446,"byte_end":13471,"line_start":301,"line_end":301,"column_start":1,"column_end":26}},{"value":"/ ```sh","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13472,"byte_end":13481,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"/ $ cargo run --features peg/trace","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13482,"byte_end":13518,"line_start":303,"line_end":303,"column_start":1,"column_end":37}},{"value":"/ ...","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13519,"byte_end":13526,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/ [PEG_TRACE] Matched rule type at 8:5","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13527,"byte_end":13567,"line_start":305,"line_end":305,"column_start":1,"column_end":41}},{"value":"/ [PEG_TRACE] Attempting to match rule ident at 8:12","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13568,"byte_end":13622,"line_start":306,"line_end":306,"column_start":1,"column_end":55}},{"value":"/ [PEG_TRACE] Attempting to match rule letter at 8:12","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13623,"byte_end":13678,"line_start":307,"line_end":307,"column_start":1,"column_end":56}},{"value":"/ [PEG_TRACE] Failed to match rule letter at 8:12","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13679,"byte_end":13730,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/ ...","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13731,"byte_end":13738,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/deveus/.cargo/registry/src/github.com-1ecc6299db9ec823/peg-0.7.0/src/lib.rs","byte_start":13739,"byte_end":13746,"line_start":310,"line_end":310,"column_start":1,"column_end":8}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}